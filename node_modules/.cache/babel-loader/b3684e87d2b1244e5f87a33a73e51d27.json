{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square\"; // const drawGame = squares.every(value => value !== null)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //////////---------- SET STATES ----------//////////\n  // Empty array that will contain our <Square /> component.\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [player, setPlayer] = useState(\"☀️\");\n  const [playerStatus, setPlayerStatus] = useState(\"Click a square to start.\");\n  const [winner, setWinner] = useState(null); // Alert Messages (for win/tie)\n  // const [message, setMessage] = useState(\"\");\n  //////////---------- VARIABLES ----------//////////\n  //////////---------- FUNCTIONS ----------//////////\n  //////////---------- DISABLE BOARD ----------//////////\n\n  const stopPlay = () => {\n    const board = document.querySelector(\".game_container\");\n    board.addEventListener(\"click\", event => {\n      event.preventDefault();\n    });\n  }; ////////---------- RESET BOARD ----------//////////\n\n\n  const handleReset = () => {\n    setSquares(Array(9).fill(null));\n    setPlayerStatus(\"Click a square to start.\");\n    setPlayer(\"☀️\");\n  }; //////////---------- WIN / TIE CHECK ----------//////////\n\n\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        // if player wins, return the winning Marker\n        setWinner(squares[a]);\n        return squares[a];\n      }\n    } //else return null\n\n\n    return null;\n  };\n\n  if (winner === \"☀️\") {\n    console.log(\"Player 1 wins!\");\n  } else if (winner === \"🌧\") {\n    console.log(\"Player 2 wins!\");\n  } // const checkWin = () => {\n  //   /// All possible win conditions, stored inside arrays\n  //   let wins = [\n  //     [0, 1, 2],\n  //     [3, 4, 5],\n  //     [6, 7, 8],\n  //     [0, 3, 6],\n  //     [1, 4, 7],\n  //     [2, 5, 8],\n  //     [0, 4, 8],\n  //     [2, 4, 6],\n  //   ];\n  //   wins.forEach((v) => {\n  //     const [a, b, c] = v;\n  //     if (squares[a] === \"☀️\" && squares[b] === \"☀️\" && squares[c] === \"☀️\") {\n  //       // stopPlay();\n  //       // setPlayerStatus(\"Player 1 wins!\");\n  //       console.log(\"Player 1 wins!\");\n  //       // setWinner(\"☀️\");\n  //       // stopPlay();\n  //     }\n  //     if (squares[a] === \"🌧\" && squares[b] === \"🌧\" && squares[c] === \"🌧\") {\n  //       // stopPlay();\n  //       // setPlayerStatus(\"Player 2 wins!\");\n  //       // setWinner(\"🌧\");\n  //       // stopPlay();\n  //       console.log(\"Player 2 wins!\");\n  //     }\n  //   });\n  // for (let i = 0; i < wins.length; i++) {\n  //   const [a, b, c] = wins[i];\n  //   if (squares[a] === \"☀️\" && squares[b] === \"☀️\" && squares[c] === \"☀️\") {\n  //     // stopPlay();\n  //     // setPlayerStatus(\"Player 1 wins!\");\n  //     setWinner(\"☀️\");\n  //     stopPlay();\n  //     console.log(\"Player 1 wins!\");\n  //   } else if (\n  //     squares[a] === \"🌧\" &&\n  //     squares[b] === \"🌧\" &&\n  //     squares[c] === \"🌧\"\n  //   ) {\n  //     // stopPlay();\n  //     // setPlayerStatus(\"Player 2 wins!\");\n  //     setWinner(\"🌧\");\n  //     stopPlay();\n  //     console.log(\"Player 2 wins!\");\n  //   } else if (squares.indexOf(null) === -1) {\n  //     // stopPlay();\n  //     //// This is currently logging 8 times to the console, maybe one for each square index?\n  //     // setPlayerStatus(\"It's a tie!\");\n  //     console.log(\"It's a tie!\");\n  //   }\n  // }\n  // };\n  //////////---------- ONCLICK GAMEPLAY ----------//////////\n\n\n  const handleGamePlay = index => {\n    console.log(\"clicked\", index);\n    let updateBoard = [...squares];\n\n    if (squares[index] === null && !winner) {\n      updateBoard[index] = player;\n      setSquares(updateBoard);\n      setPlayer(player === \"☀️\" ? \"🌧\" : \"☀️\");\n      setPlayerStatus(player === \"☀️\" ? \"P2, it's your turn.\" : \"P1, it's your turn.\");\n    }\n\n    checkWin();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"primary_header\",\n        children: \"Tic-Tac-Toe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player_status\",\n        children: playerStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg_wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game_container\",\n          children: squares.map((squares, index) => {\n            return /*#__PURE__*/_jsxDEV(Square, {\n              squares: squares,\n              handleGamePlay: handleGamePlay,\n              index: index\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"btn\",\n        onClick: handleReset,\n        children: \"Start Over?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 Ariana Brashear, 2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ke5BKazSWtyfEmq6VxhweQtbCIM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["isDisabled","React","useState","Square","App","squares","setSquares","Array","fill","player","setPlayer","playerStatus","setPlayerStatus","winner","setWinner","stopPlay","board","document","querySelector","addEventListener","event","preventDefault","handleReset","calculateWinner","lines","i","length","a","b","c","console","log","handleGamePlay","index","updateBoard","checkWin","map"],"sources":["/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/App.js"],"sourcesContent":["import { isDisabled } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square\";\n\n// const drawGame = squares.every(value => value !== null)\n\nconst App = () => {\n  //////////---------- SET STATES ----------//////////\n  // Empty array that will contain our <Square /> component.\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [player, setPlayer] = useState(\"☀️\");\n\n  const [playerStatus, setPlayerStatus] = useState(\"Click a square to start.\");\n  const [winner, setWinner] = useState(null);\n  // Alert Messages (for win/tie)\n  // const [message, setMessage] = useState(\"\");\n\n  //////////---------- VARIABLES ----------//////////\n\n  //////////---------- FUNCTIONS ----------//////////\n\n  //////////---------- DISABLE BOARD ----------//////////\n  const stopPlay = () => {\n    const board = document.querySelector(\".game_container\");\n    board.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n    });\n  };\n\n  ////////---------- RESET BOARD ----------//////////\n  const handleReset = () => {\n    setSquares(Array(9).fill(null));\n    setPlayerStatus(\"Click a square to start.\");\n    setPlayer(\"☀️\");\n  };\n\n  //////////---------- WIN / TIE CHECK ----------//////////\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        // if player wins, return the winning Marker\n        setWinner(squares[a]);\n        return squares[a];\n      }\n    }\n    //else return null\n    return null;\n  };\n\n  if (winner === \"☀️\") {\n    console.log(\"Player 1 wins!\");\n  } else if (winner === \"🌧\") {\n    console.log(\"Player 2 wins!\");\n  }\n\n  // const checkWin = () => {\n  //   /// All possible win conditions, stored inside arrays\n  //   let wins = [\n  //     [0, 1, 2],\n  //     [3, 4, 5],\n  //     [6, 7, 8],\n  //     [0, 3, 6],\n  //     [1, 4, 7],\n  //     [2, 5, 8],\n  //     [0, 4, 8],\n  //     [2, 4, 6],\n  //   ];\n\n  //   wins.forEach((v) => {\n  //     const [a, b, c] = v;\n\n  //     if (squares[a] === \"☀️\" && squares[b] === \"☀️\" && squares[c] === \"☀️\") {\n  //       // stopPlay();\n  //       // setPlayerStatus(\"Player 1 wins!\");\n  //       console.log(\"Player 1 wins!\");\n  //       // setWinner(\"☀️\");\n  //       // stopPlay();\n  //     }\n  //     if (squares[a] === \"🌧\" && squares[b] === \"🌧\" && squares[c] === \"🌧\") {\n  //       // stopPlay();\n  //       // setPlayerStatus(\"Player 2 wins!\");\n  //       // setWinner(\"🌧\");\n  //       // stopPlay();\n  //       console.log(\"Player 2 wins!\");\n  //     }\n  //   });\n\n  // for (let i = 0; i < wins.length; i++) {\n  //   const [a, b, c] = wins[i];\n  //   if (squares[a] === \"☀️\" && squares[b] === \"☀️\" && squares[c] === \"☀️\") {\n  //     // stopPlay();\n  //     // setPlayerStatus(\"Player 1 wins!\");\n  //     setWinner(\"☀️\");\n  //     stopPlay();\n  //     console.log(\"Player 1 wins!\");\n  //   } else if (\n  //     squares[a] === \"🌧\" &&\n  //     squares[b] === \"🌧\" &&\n  //     squares[c] === \"🌧\"\n  //   ) {\n  //     // stopPlay();\n  //     // setPlayerStatus(\"Player 2 wins!\");\n  //     setWinner(\"🌧\");\n  //     stopPlay();\n  //     console.log(\"Player 2 wins!\");\n  //   } else if (squares.indexOf(null) === -1) {\n  //     // stopPlay();\n  //     //// This is currently logging 8 times to the console, maybe one for each square index?\n  //     // setPlayerStatus(\"It's a tie!\");\n  //     console.log(\"It's a tie!\");\n  //   }\n  // }\n  // };\n\n  //////////---------- ONCLICK GAMEPLAY ----------//////////\n  const handleGamePlay = (index) => {\n    console.log(\"clicked\", index);\n    let updateBoard = [...squares];\n\n    if (squares[index] === null && !winner) {\n      updateBoard[index] = player;\n      setSquares(updateBoard);\n      setPlayer(player === \"☀️\" ? \"🌧\" : \"☀️\");\n      setPlayerStatus(\n        player === \"☀️\" ? \"P2, it's your turn.\" : \"P1, it's your turn.\"\n      );\n    }\n    checkWin();\n  };\n\n  return (\n    <>\n      <div className=\"main_container\">\n        <h1 className=\"primary_header\">Tic-Tac-Toe</h1>\n        <div className=\"player_status\">{playerStatus}</div>\n        <div className=\"bg_wrap\">\n          <div className=\"game_container\">\n            {squares.map((squares, index) => {\n              return (\n                <Square\n                  squares={squares}\n                  handleGamePlay={handleGamePlay}\n                  index={index}\n                  key={index}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <a href=\"#\" className=\"btn\" onClick={handleReset}>\n          Start Over?\n        </a>\n        <footer>\n          <p>&copy; Ariana Brashear, 2022</p>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}