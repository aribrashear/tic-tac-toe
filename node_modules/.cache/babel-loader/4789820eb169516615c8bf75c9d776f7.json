{"ast":null,"code":"import _toConsumableArray from\"/Users/learnacademy/Desktop/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/learnacademy/Desktop/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{isDisabled,setSelectionRange}from\"@testing-library/user-event/dist/utils\";import React,{useState}from\"react\";import\"./App.css\";import Square from\"./components/Square\";// const drawGame = squares.every(value => value !== null)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){//////////---------- SET STATES ----------//////////\n// Empty array that will contain our <Square /> component.\nvar _useState=useState(Array(9).fill(null)),_useState2=_slicedToArray(_useState,2),squares=_useState2[0],setSquares=_useState2[1];// Stores the current move of the players.\nvar _useState3=useState(\"☀️\"),_useState4=_slicedToArray(_useState3,2),player=_useState4[0],setPlayer=_useState4[1];// Updates the status message.\nvar _useState5=useState(\"Click a square to start.\"),_useState6=_slicedToArray(_useState5,2),playerStatus=_useState6[0],setPlayerStatus=_useState6[1];// Will toggle gameplay, disabling clicks once a win/tie condition has been met.\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),gameOn=_useState8[0],setGameOn=_useState8[1];////////////////--------------- FUNCTIONS ---------------////////////////\n/////***---------- RESET BOARD ----------***///////\nvar handleReset=function handleReset(){setSquares(Array(9).fill(null));setPlayerStatus(\"Click a square to start.\");setPlayer(\"☀️\");setGameOn(true);};//////////---------- WIN CHECK / CONDITIONAL ----------//////////\nvar calculateWinner=function calculateWinner(squares){var winsArr=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<winsArr.length;i++){var _winsArr$i=_slicedToArray(winsArr[i],3),a=_winsArr$i[0],b=_winsArr$i[1],c=_winsArr$i[2];if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){// If this returns true, return the value of player.\nreturn squares[a];}}// Otherwise, return null.\nreturn null;};//////////---------- TIE CHECK ----------//////////\nvar calculateTie=function calculateTie(squares){if(gameOn&&squares.every(function(v){return v!==null;})){return true;}else{return false;}};//////////---------- CONDITIONAL ----------//////////\nif(gameOn){// If the game is running and the value our winning function returned matches Player 1 (\"☀️\"), return this and turn the game off.\nif(calculateWinner(squares)===\"☀️\"){setGameOn(false);setPlayerStatus(\"Player 1 wins!\");// If the game is running and the value our winning function returned matches Player 2 \"🌧\", return this and turn the game off.\n}else if(calculateWinner(squares)===\"🌧\"){setGameOn(false);setPlayerStatus(\"Player 2 wins!\");}else if(calculateTie(squares)===true){setGameOn(false);setPlayerStatus(\"It's a tie!\");}}//////////---------- ONCLICK GAMEPLAY ----------//////////\nvar handleGamePlay=function handleGamePlay(index){var updateBoard=_toConsumableArray(squares);if(squares[index]===null){updateBoard[index]=player;setSquares(updateBoard);setPlayer(player===\"☀️\"?\"🌧\":\"☀️\");setPlayerStatus(player===\"☀️\"?\"P2, it's your turn.\":\"P1, it's your turn.\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"main_container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"primary_header\",children:\"Tic-Tac-Toe\"}),/*#__PURE__*/_jsx(\"div\",{className:\"player_status\",children:playerStatus}),/*#__PURE__*/_jsx(\"div\",{className:\"bg_wrap\",children:/*#__PURE__*/_jsx(\"div\",{className:\"game_container\",children:squares.map(function(squares,index){return/*#__PURE__*/_jsx(Square,{gameOn:gameOn,squares:squares,handleGamePlay:handleGamePlay,index:index},index);})})}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"btn\",onClick:handleReset,children:\"Start Over?\"}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\xA9 Ariana Brashear, 2022\"})})]})});};export default App;","map":{"version":3,"names":["isDisabled","setSelectionRange","React","useState","Square","App","Array","fill","squares","setSquares","player","setPlayer","playerStatus","setPlayerStatus","gameOn","setGameOn","handleReset","calculateWinner","winsArr","i","length","a","b","c","calculateTie","every","v","handleGamePlay","index","updateBoard","map"],"sources":["/Users/learnacademy/Desktop/tic-tac-toe/src/App.js"],"sourcesContent":["import {\n  isDisabled,\n  setSelectionRange,\n} from \"@testing-library/user-event/dist/utils\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square\";\n\n// const drawGame = squares.every(value => value !== null)\n\nconst App = () => {\n  //////////---------- SET STATES ----------//////////\n  // Empty array that will contain our <Square /> component.\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  // Stores the current move of the players.\n  const [player, setPlayer] = useState(\"☀️\");\n  // Updates the status message.\n  const [playerStatus, setPlayerStatus] = useState(\"Click a square to start.\");\n  // Will toggle gameplay, disabling clicks once a win/tie condition has been met.\n  const [gameOn, setGameOn] = useState(true);\n\n  ////////////////--------------- FUNCTIONS ---------------////////////////\n\n  /////***---------- RESET BOARD ----------***///////\n  const handleReset = () => {\n    setSquares(Array(9).fill(null));\n    setPlayerStatus(\"Click a square to start.\");\n    setPlayer(\"☀️\");\n    setGameOn(true);\n  };\n  //////////---------- WIN CHECK / CONDITIONAL ----------//////////\n  const calculateWinner = (squares) => {\n    const winsArr = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < winsArr.length; i++) {\n      const [a, b, c] = winsArr[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        // If this returns true, return the value of player.\n        return squares[a];\n      }\n    }\n    // Otherwise, return null.\n    return null;\n  };\n\n  //////////---------- TIE CHECK ----------//////////\n  const calculateTie = (squares) => {\n    if (gameOn && squares.every((v) => v !== null)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  //////////---------- CONDITIONAL ----------//////////\n  if (gameOn) {\n    // If the game is running and the value our winning function returned matches Player 1 (\"☀️\"), return this and turn the game off.\n    if (calculateWinner(squares) === \"☀️\") {\n      setGameOn(false);\n      setPlayerStatus(\"Player 1 wins!\");\n      // If the game is running and the value our winning function returned matches Player 2 \"🌧\", return this and turn the game off.\n    } else if (calculateWinner(squares) === \"🌧\") {\n      setGameOn(false);\n      setPlayerStatus(\"Player 2 wins!\");\n    } else if (calculateTie(squares) === true) {\n      setGameOn(false);\n      setPlayerStatus(\"It's a tie!\");\n    }\n  }\n\n  //////////---------- ONCLICK GAMEPLAY ----------//////////\n  const handleGamePlay = (index) => {\n    let updateBoard = [...squares];\n\n    if (squares[index] === null) {\n      updateBoard[index] = player;\n      setSquares(updateBoard);\n      setPlayer(player === \"☀️\" ? \"🌧\" : \"☀️\");\n      setPlayerStatus(\n        player === \"☀️\" ? \"P2, it's your turn.\" : \"P1, it's your turn.\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"main_container\">\n        <h1 className=\"primary_header\">Tic-Tac-Toe</h1>\n        <div className=\"player_status\">{playerStatus}</div>\n        <div className=\"bg_wrap\">\n          <div className=\"game_container\">\n            {squares.map((squares, index) => {\n              return (\n                <Square\n                  gameOn={gameOn}\n                  squares={squares}\n                  handleGamePlay={handleGamePlay}\n                  index={index}\n                  key={index}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <a href=\"#\" className=\"btn\" onClick={handleReset}>\n          Start Over?\n        </a>\n        <footer>\n          <p>&copy; Ariana Brashear, 2022</p>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}