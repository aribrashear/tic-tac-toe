{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //////////---------- SET STATES ----------//////////\n  // Empty array that will contain our <Square /> component.\n  const [squares, setSquares] = useState(Array(9).fill(null)); // // Players, set to start with player 1.\n  // const [player1, setPlayer1] = useState(true);\n  // const [player2, setPlayer2] = useState(false);\n\n  const [player, setPlayer] = useState(\"ðŸŽƒ\");\n  const [gameRun, setGameRun] = useState(false);\n  const [winner, setWinner] = useState(null); // Alert Messages (for win/tie)\n\n  const [message, setMessage] = useState(\"\"); //////////---------- VARIABLES ----------//////////\n  /// All possible win conditions, stored inside arrays\n\n  let wins = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]; //////////---------- FUNCTIONS ----------//////////\n  //////////---------- DISABLE BOARD ----------//////////\n  // const stopPlay = () => {\n  //   const board = document.querySelector(\".board\");\n  //   board.addEventListener(\"click\", (event) => {\n  //     event.preventDefault();\n  //   });\n  // };\n  //////////---------- RESET BOARD ----------//////////\n  // const handleReset = () => {\n  //   setSquares(Array(9).fill(null));\n  //   setPlayer1(true);\n  //   setPlayer2(false);\n  // };\n  //////////---------- WIN CHECK ----------//////////\n\n  for (let i = 0; i < wins.length; i++) {\n    const [a, b, c] = wins[i];\n\n    if (squares[a] === \"ðŸŽƒ\" && squares[b] === \"ðŸŽƒ\" && squares[c] === \"ðŸŽƒ\") {\n      console.log(\"Player 1 wins!\");\n    } else if (squares[a] === \"ðŸŽ„\" && squares[b] === \"ðŸŽ„\" && squares[c] === \"ðŸŽ„\") {\n      console.log(\"Player 2 wins!\");\n    } else if (squares.indexOf(null) === -1) {\n      console.log(\"It's a tie!\");\n    }\n  } //////////---------- ONCLICK GAMEPLAY ----------//////////\n\n\n  const handleGamePlay = index => {\n    let updateBoard = [...squares];\n    setGameRun = true;\n  }; // if (gameRun === true && )\n  // if (\n  //   player1 === true &&\n  //   updateBoard[index] !== \"ðŸŽƒ\" &&\n  //   updateBoard[index] !== \"ðŸŽ„\"\n  // ) {\n  //   updateBoard[index] = \"ðŸŽƒ\";\n  //   setSquares(updateBoard);\n  //   setPlayer2(true);\n  //   setPlayer1(false);\n  // } else if (\n  //   player2 === true &&\n  //   updateBoard[index] !== \"ðŸŽƒ\" &&\n  //   updateBoard[index] !== \"ðŸŽ„\"\n  // ) {\n  //   updateBoard[index] = \"ðŸŽ„\";\n  //   setSquares(updateBoard);\n  //   setPlayer2(false);\n  //   setPlayer1(true);\n  // }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"primary_header\",\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"win_container\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg_wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game_container\",\n        children: squares.map((squares, index) => {\n          return /*#__PURE__*/_jsxDEV(Square, {\n            squares: squares,\n            handleGamePlay: handleGamePlay,\n            index: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"Ms6NLlurY3MPyalsyn/wyrLSmkc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Square","App","squares","setSquares","Array","fill","player","setPlayer","gameRun","setGameRun","winner","setWinner","message","setMessage","wins","i","length","a","b","c","console","log","indexOf","handleGamePlay","index","updateBoard","map"],"sources":["/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square\";\n\nconst App = () => {\n  //////////---------- SET STATES ----------//////////\n  // Empty array that will contain our <Square /> component.\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  // // Players, set to start with player 1.\n  // const [player1, setPlayer1] = useState(true);\n  // const [player2, setPlayer2] = useState(false);\n  const [player, setPlayer] = useState(\"ðŸŽƒ\");\n  const [gameRun, setGameRun] = useState(false);\n  const [winner, setWinner] = useState(null);\n  // Alert Messages (for win/tie)\n  const [message, setMessage] = useState(\"\");\n\n  //////////---------- VARIABLES ----------//////////\n\n  /// All possible win conditions, stored inside arrays\n  let wins = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  //////////---------- FUNCTIONS ----------//////////\n\n  //////////---------- DISABLE BOARD ----------//////////\n  // const stopPlay = () => {\n  //   const board = document.querySelector(\".board\");\n  //   board.addEventListener(\"click\", (event) => {\n  //     event.preventDefault();\n  //   });\n  // };\n  //////////---------- RESET BOARD ----------//////////\n  // const handleReset = () => {\n  //   setSquares(Array(9).fill(null));\n  //   setPlayer1(true);\n  //   setPlayer2(false);\n  // };\n\n  //////////---------- WIN CHECK ----------//////////\n  for (let i = 0; i < wins.length; i++) {\n    const [a, b, c] = wins[i];\n    if (squares[a] === \"ðŸŽƒ\" && squares[b] === \"ðŸŽƒ\" && squares[c] === \"ðŸŽƒ\") {\n      console.log(\"Player 1 wins!\");\n    } else if (\n      squares[a] === \"ðŸŽ„\" &&\n      squares[b] === \"ðŸŽ„\" &&\n      squares[c] === \"ðŸŽ„\"\n    ) {\n      console.log(\"Player 2 wins!\");\n    } else if (squares.indexOf(null) === -1) {\n      console.log(\"It's a tie!\");\n    }\n  }\n  //////////---------- ONCLICK GAMEPLAY ----------//////////\n  const handleGamePlay = (index) => {\n    let updateBoard = [...squares];\n    setGameRun = true;\n  };\n  // if (gameRun === true && )\n\n  // if (\n  //   player1 === true &&\n  //   updateBoard[index] !== \"ðŸŽƒ\" &&\n  //   updateBoard[index] !== \"ðŸŽ„\"\n  // ) {\n  //   updateBoard[index] = \"ðŸŽƒ\";\n  //   setSquares(updateBoard);\n  //   setPlayer2(true);\n  //   setPlayer1(false);\n  // } else if (\n  //   player2 === true &&\n  //   updateBoard[index] !== \"ðŸŽƒ\" &&\n  //   updateBoard[index] !== \"ðŸŽ„\"\n  // ) {\n  //   updateBoard[index] = \"ðŸŽ„\";\n  //   setSquares(updateBoard);\n  //   setPlayer2(false);\n  //   setPlayer1(true);\n  // }\n  // };\n\n  return (\n    <>\n      <h1 className=\"primary_header\">Tic Tac Toe</h1>\n      <div className=\"win_container\">{message}</div>\n      <div className=\"bg_wrap\">\n        <div className=\"game_container\">\n          {squares.map((squares, index) => {\n            return (\n              <Square\n                squares={squares}\n                handleGamePlay={handleGamePlay}\n                index={index}\n                key={index}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}