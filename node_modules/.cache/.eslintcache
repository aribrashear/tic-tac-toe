[{"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/index.js":"1","/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/App.js":"2","/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/reportWebVitals.js":"3","/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/components/Square.js":"4","/Users/learnacademy/Desktop/tic-tac-toe/src/index.js":"5","/Users/learnacademy/Desktop/tic-tac-toe/src/App.js":"6","/Users/learnacademy/Desktop/tic-tac-toe/src/reportWebVitals.js":"7","/Users/learnacademy/Desktop/tic-tac-toe/src/components/Square.js":"8"},{"size":535,"mtime":1664238922714,"results":"9","hashOfConfig":"10"},{"size":3871,"mtime":1665239220643,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1664238922714,"results":"12","hashOfConfig":"10"},{"size":794,"mtime":1665238520890,"results":"13","hashOfConfig":"10"},{"size":535,"mtime":1664238922714,"results":"14","hashOfConfig":"15"},{"size":3881,"mtime":1665528764528,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1664238922714,"results":"17","hashOfConfig":"15"},{"size":794,"mtime":1665238520890,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b5ec6z",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1elqx3b",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/index.js",[],[],"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/App.js",["44","45","46"],[],"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/reportWebVitals.js",[],[],"/Users/learnacademy/Desktop/LEARN Local/Personal Projects/tic-tac-toe/src/components/Square.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe/src/index.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe/src/App.js",["47","48","49"],[],"import {\n  isDisabled,\n  setSelectionRange,\n} from \"@testing-library/user-event/dist/utils\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square\";\n\n// const drawGame = squares.every(value => value !== null)\n\nconst App = () => {\n  //////////---------- SET STATES ----------//////////\n  // Empty array that will contain our <Square /> component.\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  // Stores the current move of the players.\n  const [player, setPlayer] = useState(\"☀️\");\n  // Updates the status message.\n  const [playerStatus, setPlayerStatus] = useState(\"Click a square to start.\");\n  // Will toggle gameplay, disabling clicks once a win/tie condition has been met.\n  const [gameOn, setGameOn] = useState(true);\n\n  ////////////////--------------- FUNCTIONS ---------------////////////////\n\n  /////***---------- RESET BOARD ----------***///////\n  const handleReset = () => {\n    setSquares(Array(9).fill(null));\n    setPlayerStatus(\"Click a square to start.\");\n    setPlayer(\"☀️\");\n    setGameOn(true);\n  };\n  //////////---------- WIN CHECK / CONDITIONAL ----------//////////\n  const calculateWinner = (squares) => {\n    const winsArr = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < winsArr.length; i++) {\n      const [a, b, c] = winsArr[i];\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        // If this returns true, return the value of player.\n        return squares[a];\n      }\n    }\n    // Otherwise, return null.\n    return null;\n  };\n\n  //////////---------- TIE CHECK ----------//////////\n  const calculateTie = (squares) => {\n    if (gameOn && squares.every((v) => v !== null)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  //////////---------- CONDITIONAL ----------//////////\n  if (gameOn) {\n    // If the game is running and the value our winning function returned matches Player 1 (\"☀️\"), return this and turn the game off.\n    if (calculateWinner(squares) === \"☀️\") {\n      setGameOn(false);\n      setPlayerStatus(\"Player 1 wins!\");\n      // If the game is running and the value our winning function returned matches Player 2 \"🌧\", return this and turn the game off.\n    } else if (calculateWinner(squares) === \"🌧\") {\n      setGameOn(false);\n      setPlayerStatus(\"Player 2 wins!\");\n    } else if (calculateTie(squares) === true) {\n      setGameOn(false);\n      setPlayerStatus(\"It's a tie!\");\n    }\n  }\n\n  //////////---------- ONCLICK GAMEPLAY ----------//////////\n  const handleGamePlay = (index) => {\n    let updateBoard = [...squares];\n\n    if (squares[index] === null) {\n      updateBoard[index] = player;\n      setSquares(updateBoard);\n      setPlayer(player === \"☀️\" ? \"🌧\" : \"☀️\");\n      setPlayerStatus(\n        player === \"☀️\" ? \"P2, it's your turn.\" : \"P1, it's your turn.\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"main_container\">\n        <h1 className=\"primary_header\">Tic-Tac-Toe</h1>\n        <div className=\"player_status\">{playerStatus}</div>\n        <div className=\"bg_wrap\">\n          <div className=\"game_container\">\n            {squares.map((squares, index) => {\n              return (\n                <Square\n                  gameOn={gameOn}\n                  squares={squares}\n                  handleGamePlay={handleGamePlay}\n                  index={index}\n                  key={index}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <a href=\"#\" className=\"btn\" onClick={handleReset}>\n          Start Over?\n        </a>\n        <footer>\n          <p>&copy; Ariana Brashear, 2022</p>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","/Users/learnacademy/Desktop/tic-tac-toe/src/reportWebVitals.js",[],[],"/Users/learnacademy/Desktop/tic-tac-toe/src/components/Square.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":2,"column":3,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":3,"column":3,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":118,"column":9,"nodeType":"57","endLine":118,"endColumn":59},{"ruleId":"50","severity":1,"message":"51","line":2,"column":3,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":3,"column":3,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":118,"column":9,"nodeType":"57","endLine":118,"endColumn":59},"no-unused-vars","'isDisabled' is defined but never used.","Identifier","unusedVar","'setSelectionRange' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]